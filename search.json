[{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Drawing up plays with ggulti","text":"Install ggulti github : Load ggulti package:","code":"install.packages(\"devtools\") devtools::install_github(\"swebb1/ggulti\") library(ggulti)"},{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"create-a-pitch","dir":"Articles","previous_headings":"","what":"Create a pitch","title":"Drawing up plays with ggulti","text":"Use ggpitch() function create pitch. type argument specifies type pitch create. endzone_fill argument specifies color endzone. Pitch types “full” = Full pitch (default) “half_attack” = Half pitch showing attacking endzone () “half_defend” = Half pitch showing defending endzone () “blank” = Lined area. Useful drills etc. “void” = pitch background.      ggpitch() function returns ggplot object can customised .","code":"pitch = ggpitch(type=\"half_attack\",endzone_fill = \"#AA4422\") ggpitch() ggpitch(type = \"half_attack\", fill = \"lightgreen\", alpha=1) ggpitch(type = \"half_defend\", endzone_fill = \"black\") ggpitch(type = \"blank\", ymax = 50, xmax = 30) ggpitch(type = \"void\")"},{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"pitch-objects","dir":"Articles","previous_headings":"","what":"Pitch objects","title":"Drawing up plays with ggulti","text":"Pitch objects plotted points typically players, discs cones. Use pitch_object() function create object positions. Let’s create list three offense players attacking endzone pitch_object() function: code , two stationary handlers (H1 H2) one cutter (C1) making cut along front endzone back corner.","code":"players <- list(   pitch_object(label = \"H1\", show = T, x = c(5), y = c(75), alpha = 0.8, frame = 1:3),   pitch_object(label = \"H2\", show = T, x = c(20), y = c(75), alpha = 0.5, frame = 1:3),   pitch_object(label = \"C1\", show = T, x = c(18,14,5), y = c(83,83,98), alpha = 0.8, frame = 1:3) )"},{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"what-are-frames","dir":"Articles","previous_headings":"Pitch objects","what":"What are frames?","title":"Drawing up plays with ggulti","text":"Frames used animate objects. code , frame argument specifies frames object visible. case, objects visible frames 1, 2 3. H1 H2 stationary objects single x y coordinates. C1 moving object multiple x y coordinates frame. frame argument optional defaults 1 (e.g. single image). can plot players pitch created using plot_play() function. default plot frame 1.  can also choose frame plot:  can plot frames objects might useful creating plots:","code":"plot_play(pitch = pitch, object_list = players) plot_play(pitch = pitch, object_list = players, static_frame = 3) plot_play(pitch = pitch, object_list = players,show_all = T)"},{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"other-object-types","dir":"Articles","previous_headings":"Pitch objects","what":"Other object types","title":"Drawing up plays with ggulti","text":"default, object type set “Offense”. following object types recognised “Offense” = Green circle “Defense” = Blue circle “Coach” = Red circle “Cone” = Orange triangle “Disc” = Small grey circle","code":"random <- list(   pitch_object(label = \"Queue-here\", show = T, object = \"Cone\", x = c(5), y = c(75), alpha = 0.8, frame = 1),   pitch_object(label = \"Pep\", show = T, object = \"Coach\", x = c(20), y = c(75), alpha = 0.5, frame = 1),   pitch_object(label = \"disc\", show = F, object = \"Disc\", x = c(18), y = c(83), alpha = 0.8, frame = 1),   pitch_object(label = \"D1\", show = F, object = \"Defense\", x = c(18), y = c(55), alpha = 0.8, frame = 1) )  plot_play(pitch = pitch, object_list = random)"},{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"custom-objects","dir":"Articles","previous_headings":"Pitch objects","what":"Custom objects","title":"Drawing up plays with ggulti","text":"can also add custom objects specifying different object argument.  default object present offense object. can change default options (colour, size, shape) plot_play() function:  Alternatively, can use pv argument add new list plotting values. ggulti_plot_values object gives access default values:  customising objects, can specifiy specific teams, genders even psoitions e.g.","code":"custom <- list(   pitch_object(label = \"Ref\", show = T, object = \"Referee\", x = c(18), y = c(55), alpha = 0.8, frame = 1) )  plot_play(pitch = pitch, object_list = custom) plot_play(pitch = pitch, object_list = custom, default_obj_col = \"black\") pv <- ggulti_plot_values pv$obj_cols <- c(pv$obj_cols,\"Referee\" = \"black\") pv$obj_shapes <- c(pv$obj_shapes,\"Referee\" = 18) pv$obj_sizes <- c(pv$obj_sizes,\"Referee\" = 2)  plot_play(pitch = pitch, object_list = custom, pv = pv) zone_positions <- c(\"Cup\" = \"blue\", \"Wing\" = \"red\", \"Mid\" = \"purple\", \"Deep\" = \"green\") pv <- ggulti_plot_values pv$obj_cols <- c(ggulti_plot_values$obj_cols, zone_positions)  zone <- list(   pitch_object(label = \"C1\", show=T, object = \"Cup\", x=c(14), y=c(25)),   pitch_object(label = \"C2\", show=T, object = \"Cup\", x=c(18), y=c(28)),   pitch_object(label = \"C3\", show=T, object = \"Cup\", x=c(22), y=c(25)),   pitch_object(label = \"W1\", show=T, object = \"Wing\", x=c(10), y=c(40)),   pitch_object(label = \"W2\", show=T, object = \"Wing\", x=c(27), y=c(40)),   pitch_object(label = \"Mid\", show=T, object = \"Mid\", x=c(18), y=c(38), label_pos = \"up\"),   pitch_object(label = \"Deep\", show=T, object = \"Deep\", x=c(18), y=c(60)) )  plot_play(pitch = ggpitch(endzone_fill=\"darkgrey\"),object_list = zone,pv=pv)"},{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"add-defenders","dir":"Articles","previous_headings":"","what":"Add defenders","title":"Drawing up plays with ggulti","text":"Let’s return original set three offense players attacking endzone. like add defender player. can add defenders using pitch_object() function specifying object type “Defense”. can also use defender() function add defenders existing players. Defenders objects follow another object frames. can set position relative object using xjust yjust arguments. Defenders inherit defaults player (frame,alpha, show). default xjust yjust -1. means defender placed 1 unit left 1 unit object, slightly backhand side. can use single values offsets value frame. Let’s now combine players defenders single list:","code":"## Add defenders to players defenders <- list(   defender(player = players[[1]],label = \"D1\", show = T, xjust = c(2), yjust = c(2)),   defender(player = players[[2]],label = \"D2\", show = T, xjust = c(-3), yjust = c(2)),   defender(player = players[[3]],label = \"D3\", show = T, xjust = c(-3,-3,3), yjust = c(-1,-1,-5)) ) ## Join players and defenders player_list <- c(players,defenders) plot_play(pitch = pitch,object_list = player_list, keep_arrows = T, static_frame = 1)"},{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"pitch-arrows","dir":"Articles","previous_headings":"","what":"Pitch arrows","title":"Drawing up plays with ggulti","text":"Pitch arrows can added similar way objects using pitch_arrow() function. However, arrows typically used represent player movements throws two players.","code":""},{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"throws","dir":"Articles","previous_headings":"Pitch arrows","what":"Throws","title":"Drawing up plays with ggulti","text":"can create list throws using throw() function. function requires object_list containing objects (e.g. players) throw . start end points throw determined involved players positions specific throwing_frame. argument can also set “space” throw empty space. case space_x space_y required specify target location. can also specify arrow_shape show straight curved throws: “straight” = Straight arrow (default) “fhrc bhio” = Right curved arrow “bhrc fhio” = Left curved arrow","code":"## Add throws between players throws <- list(   throw(object_list = player_list, label = \"T1\", show = F,from = \"H1\",to = \"C1\",frame = 1:2, throw_frame = 3, arrow_shape = \"bhrc\") )"},{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"player-paths","dir":"Articles","previous_headings":"Pitch arrows","what":"Player paths","title":"Drawing up plays with ggulti","text":"can also add arrows represent object movements (e.g. player cuts) using object_paths() function. function requires object_list containing objects (e.g. players) plot paths . objects argument specifies object types plot paths . default set “Offense” plot paths Offense player objects. Now can add throws paths create list arrows:","code":"paths <-  object_paths(player_list) ## Add arrows in front of running players ## Create arrow list arrow_list = list(   paths,   throws )"},{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"adding-a-disc","dir":"Articles","previous_headings":"","what":"Adding a disc","title":"Drawing up plays with ggulti","text":"can add discs graphics pitch_object() function using object=\"Disc\" specifying coordinates frames. Alternatively can use disc() function create disc follows specific throw. function requires pitch_arrow object trace. release_frame argument specifies frame disc thrown. disc added list pitch objects:","code":"## Add a disc disc_list = list(   disc(throw = throws[[1]],label = \"disc\",show = F,frame = 1:3,release_frame = 3) ) ## Create object list object_list = c(player_list,disc_list)"},{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"plotting-the-play","dir":"Articles","previous_headings":"","what":"Plotting the play","title":"Drawing up plays with ggulti","text":"now objects arrows representing players, defenders, cuts, throws disc. can plot play using plot_play() function:","code":"plot_play(pitch = pitch,object_list = object_list,arrow_list = arrow_list,keep_arrows = T,static_frame = 1) plot_play(pitch = pitch,object_list = object_list,arrow_list = arrow_list,keep_arrows = T,static_frame = 2) plot_play(pitch = pitch,object_list = object_list,arrow_list = arrow_list,keep_arrows = T,static_frame = 3)"},{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"animating-the-play","dir":"Articles","previous_headings":"","what":"Animating the play","title":"Drawing up plays with ggulti","text":"big advantage setting plays frames can create animations. can animate play setting animate = T argument. Animations use gganimate transition_states. speed animation can controlled transition_time state_time arguments.","code":"plot_play(pitch = pitch,object_list = object_list,arrow_list = arrow_list,keep_arrows = T,animate = T,transition_length = 1,state_length = 0.5)"},{"path":"https://swebb1.github.io/ggulti/articles/Drawing_up_plays.html","id":"further-customisation","dir":"Articles","previous_headings":"","what":"Further customisation","title":"Drawing up plays with ggulti","text":"plot_play function returns ggplot object, can customise plot using ggplot2 functions. example, can add title change theme:  control animations, can save plot_play() output run gganimate .","code":"library(ggplot2)  plot_play(pitch = pitch,object_list = object_list,arrow_list = arrow_list,keep_arrows = T,static_frame = 1) +   ggtitle(\"Back of the zone!\") +   geom_label(aes(x = 18, y = 94, label = \"Score!\"), size = 7, color = \"black\") +   theme_classic() library(gganimate) library(gifski)  p <- plot_play(pitch = pitch,object_list = object_list,arrow_list = arrow_list,show_all = T)  ap <- p + transition_states(states = factor(frame, levels = 1:3), transition_length = 0.5, state_length = 0.5, wrap=F) +   shadow_mark(size = 0, colour = 'grey') +   enter_fade()  animate(ap, renderer = gifski_renderer())"},{"path":[]},{"path":[]},{"path":"https://swebb1.github.io/ggulti/articles/Example_playbook.html","id":"fox","dir":"Articles","previous_headings":"Set Plays > Horizontal","what":"Fox","title":"Example playbook","text":"","code":"library(ggulti)  ## Set players and positions players <- list(   pitch_object(\"H1\", show=T, x=c(20),y=c(28), alpha = 0.8, frame = 1:3),   pitch_object(\"H2\", show=T, x=c(20), y=c(20), alpha = 0.5, frame = 1:3),   pitch_object(\"H3\", show=F, x=c(5), y=c(19), alpha = 0.5,frame = 1:3),   pitch_object(\"H4\", show=F, x=c(7), y=c(18), alpha = 0.5,frame = 1:3),   pitch_object(\"Fox\", show=T, x=c(26,17,21), y=c(42,40,75), alpha = 0.8,frame = 1:3),   pitch_object(\"C1\", show=F, x=c(3), y=c(36), alpha = 0.5,frame = 1:3),   pitch_object(\"C2\", show=F, x=c(3), y=c(40), alpha = 0.5,frame = 1:3) )  ## Add defence defenders <- list(  defender(players[[1]],\"D1\",show=F,xjust = -1.5,yjust = 1.5)  ) ## Join players and defenders player_list <- c(players,defenders)  ## Add throws between players throws <- list(   throw(player_list,\"T1\",F,\"H1\",\"Fox\",frame=1:3,throw_frame = 3,arrow_shape = \"fhrc\") )  ## Create arrow list arrow_list = list(   object_paths(player_list), ## Add arrows in front of running players   throws )  ## Add a disc disc_list = list(   disc(throws[[1]],\"D1\",F,frame = 1:3,release_frame = 3,xjust = c(1,1),yjust = c(1,-1)) )  ## Combine players and disc object_list <- c(player_list,disc_list) plot_play(ggpitch(),arrow_list,object_list,animate=T,shadow=T)"},{"path":"https://swebb1.github.io/ggulti/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://swebb1.github.io/ggulti/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ww (2024). ggulti: Package (Title Case). R package version 0.1.0, https://swebb1.github.io/ggulti/.","code":"@Manual{,   title = {ggulti: What the Package Does (Title Case)},   author = {Who wrote it},   year = {2024},   note = {R package version 0.1.0},   url = {https://swebb1.github.io/ggulti/}, }"},{"path":"https://swebb1.github.io/ggulti/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (Title Case)","text":"Install ggulti github : Load ggulti package:","code":"install.packages(\"devtools\") devtools::install_github(\"swebb1/ggulti\") library(ggulti)"},{"path":"https://swebb1.github.io/ggulti/reference/all_frames.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function used by plot_play() function. Takes a dataframe of objects/arrows and fills so that each object/arrow appears in all frames — all_frames","title":"Helper function used by plot_play() function. Takes a dataframe of objects/arrows and fills so that each object/arrow appears in all frames — all_frames","text":"Helper function used plot_play() function. Takes dataframe objects/arrows fills object/arrow appears frames","code":""},{"path":"https://swebb1.github.io/ggulti/reference/all_frames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function used by plot_play() function. Takes a dataframe of objects/arrows and fills so that each object/arrow appears in all frames — all_frames","text":"","code":"all_frames(df, frames)"},{"path":"https://swebb1.github.io/ggulti/reference/all_frames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function used by plot_play() function. Takes a dataframe of objects/arrows and fills so that each object/arrow appears in all frames — all_frames","text":"df Dataframe objects/arrows frames Total number frames fill","code":""},{"path":"https://swebb1.github.io/ggulti/reference/all_frames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function used by plot_play() function. Takes a dataframe of objects/arrows and fills so that each object/arrow appears in all frames — all_frames","text":"data.frame","code":""},{"path":"https://swebb1.github.io/ggulti/reference/all_frames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function used by plot_play() function. Takes a dataframe of objects/arrows and fills so that each object/arrow appears in all frames — all_frames","text":"","code":"all_frames(throws,3) #> Error: object 'throws' not found"},{"path":"https://swebb1.github.io/ggulti/reference/defender.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function to create a Defense pitch_object dataframe which tracks another objects movements. — defender","title":"Convenience function to create a Defense pitch_object dataframe which tracks another objects movements. — defender","text":"Convenience function create Defense pitch_object dataframe tracks another objects movements.","code":""},{"path":"https://swebb1.github.io/ggulti/reference/defender.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function to create a Defense pitch_object dataframe which tracks another objects movements. — defender","text":"","code":"defender(   player,   label = \"\",   show = NA,   object = \"Defense\",   xjust = -1,   yjust = -1,   frame = NA,   alpha = NA,   label_pos = NA )"},{"path":"https://swebb1.github.io/ggulti/reference/defender.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function to create a Defense pitch_object dataframe which tracks another objects movements. — defender","text":"player Name object_dataframe track (required) label Name object (required) show Show label plots : default = player object, T, F object Name type object : \"Defense\" (default), \"Offense\", \"Coach\", \"Cone\", \"Disc\" recognised can anything. xjust Vector adjustments player x-coords offset defenders position : default = -1 yjust Vector adjustments player y-coords offset defenders position : default = -1 frame Vector frames show object : default = player object alpha Colour opacity object : default = player object label_pos Position label relative object : default = player object, \"\"  \"\", \"left\", \"right\"","code":""},{"path":"https://swebb1.github.io/ggulti/reference/defender.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function to create a Defense pitch_object dataframe which tracks another objects movements. — defender","text":"data.frame","code":""},{"path":"https://swebb1.github.io/ggulti/reference/defender.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience function to create a Defense pitch_object dataframe which tracks another objects movements. — defender","text":"","code":"defender(player_list[[1]], \"D1\", x = c(-1,-1,5), y = c(2,2,5)) #> Error: object 'player_list' not found"},{"path":"https://swebb1.github.io/ggulti/reference/disc.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function to create a pitch_object which follows the path of an arrow. E.g. a disc following a throw. — disc","title":"Convenience function to create a pitch_object which follows the path of an arrow. E.g. a disc following a throw. — disc","text":"Convenience function create pitch_object follows path arrow. E.g. disc following throw.","code":""},{"path":"https://swebb1.github.io/ggulti/reference/disc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function to create a pitch_object which follows the path of an arrow. E.g. a disc following a throw. — disc","text":"","code":"disc(   throw,   label,   show = F,   xjust = c(-1, -1),   yjust = c(1, 1),   frame = 1,   release_frame = 2,   alpha = 1,   label_pos = \"down\" )"},{"path":"https://swebb1.github.io/ggulti/reference/disc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function to create a pitch_object which follows the path of an arrow. E.g. a disc following a throw. — disc","text":"throw pitch_arrow dataframe (required) label Name object (required) show Show label plots : default = F xjust 2 value vector showing x-coord offset thrower receiver : default = c(-1,-1) yjust 2 value vector showing y-coord offset thrower receiver : default = c(1,1) frame Vector frames show object : default = 1 release_frame frame disc released thrower : default = 2 alpha Colour opacity object : default = 1 label_pos Position label relative start end object : \"\" (default), \"\", \"left\", \"right\"","code":""},{"path":"https://swebb1.github.io/ggulti/reference/disc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function to create a pitch_object which follows the path of an arrow. E.g. a disc following a throw. — disc","text":"data.frame","code":""},{"path":"https://swebb1.github.io/ggulti/reference/disc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience function to create a pitch_object which follows the path of an arrow. E.g. a disc following a throw. — disc","text":"","code":"disc(throw_list[[1]],\"D1\",frame = 1:3, release_frame = 2) #> Error: object 'throw_list' not found"},{"path":"https://swebb1.github.io/ggulti/reference/export_frames.html","id":null,"dir":"Reference","previous_headings":"","what":"Export an object or arrow list as a tsv file arranged by frames. This is useful for making manual edits. — export_frames","title":"Export an object or arrow list as a tsv file arranged by frames. This is useful for making manual edits. — export_frames","text":"Export object arrow list tsv file arranged frames. useful making manual edits.","code":""},{"path":"https://swebb1.github.io/ggulti/reference/export_frames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export an object or arrow list as a tsv file arranged by frames. This is useful for making manual edits. — export_frames","text":"","code":"export_frames(list, filename = \"frames.tsv\")"},{"path":"https://swebb1.github.io/ggulti/reference/export_frames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export an object or arrow list as a tsv file arranged by frames. This is useful for making manual edits. — export_frames","text":"list Either list objects arrows filename Name file save : default = \"frames.tsv\"","code":""},{"path":"https://swebb1.github.io/ggulti/reference/export_frames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export an object or arrow list as a tsv file arranged by frames. This is useful for making manual edits. — export_frames","text":"data.frame","code":""},{"path":"https://swebb1.github.io/ggulti/reference/export_frames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export an object or arrow list as a tsv file arranged by frames. This is useful for making manual edits. — export_frames","text":"","code":"export_frames(object_list) #> Error: object 'object_list' not found"},{"path":"https://swebb1.github.io/ggulti/reference/ggpitch.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a pitch map as a ggplot object. The 'type' parameter controls the section of pitch. Default size is set to 100 x 37, with endzones 18 deep. — ggpitch","title":"Generate a pitch map as a ggplot object. The 'type' parameter controls the section of pitch. Default size is set to 100 x 37, with endzones 18 deep. — ggpitch","text":"Generate pitch map ggplot object. 'type' parameter controls section pitch. Default size set 100 x 37, endzones 18 deep.","code":""},{"path":"https://swebb1.github.io/ggulti/reference/ggpitch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a pitch map as a ggplot object. The 'type' parameter controls the section of pitch. Default size is set to 100 x 37, with endzones 18 deep. — ggpitch","text":"","code":"ggpitch(   type = \"full\",   colour = \"dimgray\",   fill = \"white\",   endzone_fill = \"#D55E00\",   linewidth = 0.5,   alpha = 1,   endzone_alpha = 0.2,   linetype = \"solid\",   xmin = 0,   xmax = 37,   ymin = 0,   ymax = 100,   zone_depth = 18 )"},{"path":"https://swebb1.github.io/ggulti/reference/ggpitch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a pitch map as a ggplot object. The 'type' parameter controls the section of pitch. Default size is set to 100 x 37, with endzones 18 deep. — ggpitch","text":"type Style pitch: \"full\" (default), \"half_attack\", \"half_defend\", \"blank\", \"void\" colour Colour pitch outline : default = \"dimgrey\" fill Fill colour central zone  : default = \"white\" endzone_fill Fill colour endzone : default = #AA4422 linewidth Width lines : default = 0.5 alpha Fill opacity central zone : default = 1 endzone_alpha Fill opacity endzone : default = 0.2 linetype Linetype lines : default = solid xmin Start x coordinate : default = 0 xmax End x coordinate : default = 37 ymin Start y coordinate : default = 0 ymax End y coordinate : default = 100 zone_depth Depth endzones : default = 18","code":""},{"path":"https://swebb1.github.io/ggulti/reference/ggpitch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a pitch map as a ggplot object. The 'type' parameter controls the section of pitch. Default size is set to 100 x 37, with endzones 18 deep. — ggpitch","text":"ggplot object","code":""},{"path":"https://swebb1.github.io/ggulti/reference/ggpitch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a pitch map as a ggplot object. The 'type' parameter controls the section of pitch. Default size is set to 100 x 37, with endzones 18 deep. — ggpitch","text":"","code":"ggpitch()  ggpitch(\"half_attack\",endzone_fill=\"blue\")"},{"path":"https://swebb1.github.io/ggulti/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://swebb1.github.io/ggulti/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://swebb1.github.io/ggulti/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"https://swebb1.github.io/ggulti/reference/hstack.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to print a list of 7 players in horizontal stack formation — hstack","title":"Helper function to print a list of 7 players in horizontal stack formation — hstack","text":"Helper function print list 7 players horizontal stack formation","code":""},{"path":"https://swebb1.github.io/ggulti/reference/hstack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to print a list of 7 players in horizontal stack formation — hstack","text":"","code":"hstack()"},{"path":"https://swebb1.github.io/ggulti/reference/hstack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to print a list of 7 players in horizontal stack formation — hstack","text":"tibble","code":""},{"path":"https://swebb1.github.io/ggulti/reference/hstack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to print a list of 7 players in horizontal stack formation — hstack","text":"","code":"hstack #> function ()  #> { #>     players <- list(player(\"H1\", show = T, x = c(8), y = c(22),  #>         alpha = 0.8, frame = 1), player(\"H2\", show = T, x = c(17),  #>         y = c(22), alpha = 0.8, frame = 1), player(\"H3\", show = T,  #>         x = c(25), y = c(22), alpha = 0.8, frame = 1), player(\"C1\",  #>         show = T, x = c(7), y = c(40), alpha = 0.8, frame = 1),  #>         player(\"C2\", show = T, x = c(15), y = c(40), alpha = 0.8,  #>             frame = 1), player(\"C3\", show = T, x = c(22), y = c(40),  #>             alpha = 0.8, frame = 1), player(\"C4\", show = T, x = c(29),  #>             y = c(40), alpha = 0.8, frame = 1)) #>     bind_rows(players) #> } #> <bytecode: 0x555898ee1428> #> <environment: namespace:ggulti>"},{"path":"https://swebb1.github.io/ggulti/reference/object_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function to create pitch_arrows which trace an objects movement path on the pitch e.g. a players cut. You can choose to only trace specific object types e.g offense players only. — object_paths","title":"Convenience function to create pitch_arrows which trace an objects movement path on the pitch e.g. a players cut. You can choose to only trace specific object types e.g offense players only. — object_paths","text":"Convenience function create pitch_arrows trace objects movement path pitch e.g. players cut. can choose trace specific object types e.g offense players .","code":""},{"path":"https://swebb1.github.io/ggulti/reference/object_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function to create pitch_arrows which trace an objects movement path on the pitch e.g. a players cut. You can choose to only trace specific object types e.g offense players only. — object_paths","text":"","code":"object_paths(object_list, objects = c(\"Offense\"))"},{"path":"https://swebb1.github.io/ggulti/reference/object_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function to create pitch_arrows which trace an objects movement path on the pitch e.g. a players cut. You can choose to only trace specific object types e.g offense players only. — object_paths","text":"object_list list object data.frames e.g. generated pitch_object (required) objects vector object types trace : default = \"Offense\"","code":""},{"path":"https://swebb1.github.io/ggulti/reference/object_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function to create pitch_arrows which trace an objects movement path on the pitch e.g. a players cut. You can choose to only trace specific object types e.g offense players only. — object_paths","text":"data.frame","code":""},{"path":"https://swebb1.github.io/ggulti/reference/object_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience function to create pitch_arrows which trace an objects movement path on the pitch e.g. a players cut. You can choose to only trace specific object types e.g offense players only. — object_paths","text":"","code":"object_paths(player_list) #> Error: object 'player_list' not found object_paths(player_list, c(\"Offense\",\"Defense\")) #> Error: object 'player_list' not found"},{"path":"https://swebb1.github.io/ggulti/reference/pitch_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a pitch_arrow dataframe. Arrows are represented with geom_segment or geom_curve in the plot_play() function. Arrows are usually player movements (cuts) or throws on the field. — pitch_arrow","title":"Create a pitch_arrow dataframe. Arrows are represented with geom_segment or geom_curve in the plot_play() function. Arrows are usually player movements (cuts) or throws on the field. — pitch_arrow","text":"Create pitch_arrow dataframe. Arrows represented geom_segment geom_curve plot_play() function. Arrows usually player movements (cuts) throws field.","code":""},{"path":"https://swebb1.github.io/ggulti/reference/pitch_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a pitch_arrow dataframe. Arrows are represented with geom_segment or geom_curve in the plot_play() function. Arrows are usually player movements (cuts) or throws on the field. — pitch_arrow","text":"","code":"pitch_arrow(   label = \"\",   show = F,   object = \"Offense\",   type = \"Cut\",   x,   y,   xend,   yend,   frame = 1,   alpha = 1,   arrow_shape = \"straight\",   label_pos = \"start_down\" )"},{"path":"https://swebb1.github.io/ggulti/reference/pitch_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a pitch_arrow dataframe. Arrows are represented with geom_segment or geom_curve in the plot_play() function. Arrows are usually player movements (cuts) or throws on the field. — pitch_arrow","text":"label Name arrow (required) show Show label plots : default = F object Attribute arrow object type match colours : \"Offense\" (default), \"Defense\", \"Coach\", \"Cone\", \"Disc\" recognised can anything. type arrow represents : \"Cut\" (default), \"Throw\", \"Label\" recognised can anything x x-coord start arrow (required) y y-coord start arrow (required) xend x-coord end arrow (required) yend y-coord end arrow (required) frame Vector frames show arrow : default = 1 alpha Colour opacity arrow : default = 1 arrow_shape Shape arrow : \"straight\" (default), \"bhrc\", \"fhrc\", \"bhio\", \"fhio\" (give curved throwing shapes) label_pos Position label relative start end arrow : \"start_down\" (default), \"start_up\", \"end_down\", \"end_up\"","code":""},{"path":"https://swebb1.github.io/ggulti/reference/pitch_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a pitch_arrow dataframe. Arrows are represented with geom_segment or geom_curve in the plot_play() function. Arrows are usually player movements (cuts) or throws on the field. — pitch_arrow","text":"data.frame","code":""},{"path":"https://swebb1.github.io/ggulti/reference/pitch_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a pitch_arrow dataframe. Arrows are represented with geom_segment or geom_curve in the plot_play() function. Arrows are usually player movements (cuts) or throws on the field. — pitch_arrow","text":"","code":"pitch_arrow(\"T1\", type = \"Throw\", x = 5, y = 37, xend = 5, yend = 90, frame = 3) #>   label show  object  type x  y xend yend frame alpha arrow_shape  label_pos #> 1    T1      Offense Throw 5 37    5   90     3     1    straight start_down pitch_arrow(\"C1\", x = 5, y = 37, xend = 5, yend = 90, frame = 3) #>   label show  object type x  y xend yend frame alpha arrow_shape  label_pos #> 1    C1      Offense  Cut 5 37    5   90     3     1    straight start_down"},{"path":"https://swebb1.github.io/ggulti/reference/pitch_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a pitch_object dataframe. Objects are represented with geom_point in the plot_play() function. Objects are usually players on the field. — pitch_object","title":"Create a pitch_object dataframe. Objects are represented with geom_point in the plot_play() function. Objects are usually players on the field. — pitch_object","text":"Create pitch_object dataframe. Objects represented geom_point plot_play() function. Objects usually players field.","code":""},{"path":"https://swebb1.github.io/ggulti/reference/pitch_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a pitch_object dataframe. Objects are represented with geom_point in the plot_play() function. Objects are usually players on the field. — pitch_object","text":"","code":"pitch_object(   label = \"\",   show = F,   object = \"Offense\",   x,   y,   frame = 1,   alpha = 0.5,   label_pos = \"down\" )"},{"path":"https://swebb1.github.io/ggulti/reference/pitch_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a pitch_object dataframe. Objects are represented with geom_point in the plot_play() function. Objects are usually players on the field. — pitch_object","text":"label Name object (required) show Show label plots : default = F object Name type object : \"Offense\" (default), \"Defense\", \"Coach\", \"Cone\", \"Disc\" recognised can anything. x Vector x-coords covered object (required) y Vector y-coords covered object (required) frame Vector frames show object : default = 1 alpha Colour opacity object : default = 0.5 label_pos Position label relative object : \"\" (default), \"\", \"left\", \"right\"","code":""},{"path":"https://swebb1.github.io/ggulti/reference/pitch_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a pitch_object dataframe. Objects are represented with geom_point in the plot_play() function. Objects are usually players on the field. — pitch_object","text":"data.frame","code":""},{"path":"https://swebb1.github.io/ggulti/reference/pitch_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a pitch_object dataframe. Objects are represented with geom_point in the plot_play() function. Objects are usually players on the field. — pitch_object","text":"","code":"pitch_object(\"H1\", T, x = c(15,15,5), y = c(25,35,37), frame = 1:3) #>   label show  object  x  y frame alpha label_pos #> 1    H1   H1 Offense 15 25     1   0.5      down #> 2    H1   H1 Offense 15 35     2   0.5      down #> 3    H1   H1 Offense  5 37     3   0.5      down pitch_object(\"D1\", F, object = \"Defense\", x = c(13,13,8), y = c(25,35,37), frame = 1:3) #>   label show  object  x  y frame alpha label_pos #> 1    D1      Defense 13 25     1   0.5      down #> 2    D1      Defense 13 35     2   0.5      down #> 3    D1      Defense  8 37     3   0.5      down pitch_object(\"q1\", F, object = \"Cone\", x = c(13), y = c(26), frame = 1:3) #>   label show object  x  y frame alpha label_pos #> 1    q1        Cone 13 26     1   0.5      down #> 2    q1        Cone 13 26     2   0.5      down #> 3    q1        Cone 13 26     3   0.5      down"},{"path":"https://swebb1.github.io/ggulti/reference/plot_play.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting function to create final graphic with a pitch, objects and arrows. — plot_play","title":"Plotting function to create final graphic with a pitch, objects and arrows. — plot_play","text":"Plotting function create final graphic pitch, objects arrows.","code":""},{"path":"https://swebb1.github.io/ggulti/reference/plot_play.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting function to create final graphic with a pitch, objects and arrows. — plot_play","text":"","code":"plot_play(   pitch = ggpitch(),   arrow_list = NULL,   object_list = NULL,   static_frame = 1,   animate = F,   animation_res = 150,   animation_width = 800,   animation_height = 800,   shadow = F,   transition_length = 1,   state_length = 0.5,   keep_arrows = F,   show_all = F,   default_obj_size = 8,   default_obj_shape = 19,   default_obj_col = \"#009E73\",   pv = ggulti_plot_values )"},{"path":"https://swebb1.github.io/ggulti/reference/plot_play.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting function to create final graphic with a pitch, objects and arrows. — plot_play","text":"pitch pitch ggplot object create ggpitch() : default = ggpitch() arrow_list List pitch_arrow dataframes object_list List pitch_object dataframes static_frame frame show static plot : default = 1 animate Output gif instead image : F (default), T shadow Add shadow objects animation : T, F (default) transition_length Transition time (s) animations : default = 1 state_length State time (s) animations : default = 0.5 keep_arrows Show arrows frames apply frames objects : F (default), T show_all Show frames together one image : F (default), T default_obj_size Default point size objects : default = 8 default_obj_shape Default shape objects : default = 19 default_obj_col Default colour objects : default = #009E73 animate_res Manually set animation resolution : default = 80","code":""},{"path":"https://swebb1.github.io/ggulti/reference/plot_play.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting function to create final graphic with a pitch, objects and arrows. — plot_play","text":"ggplot object","code":""},{"path":"https://swebb1.github.io/ggulti/reference/plot_play.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting function to create final graphic with a pitch, objects and arrows. — plot_play","text":"","code":"plot_play(pitch,arrow_list,object_list,static_frame=2) #> Error: object 'arrow_list' not found"},{"path":"https://swebb1.github.io/ggulti/reference/throw.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function to create a pitch_arrow dataframe representing a throw between two players in an object list. — throw","title":"Convenience function to create a pitch_arrow dataframe representing a throw between two players in an object list. — throw","text":"Convenience function create pitch_arrow dataframe representing throw two players object list.","code":""},{"path":"https://swebb1.github.io/ggulti/reference/throw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function to create a pitch_arrow dataframe representing a throw between two players in an object list. — throw","text":"","code":"throw(   object_list,   label,   show = F,   from,   to,   frame = 1,   throw_frame,   alpha = 1,   arrow_shape = \"straight\",   space_x = NA,   space_y = NA,   label_pos = \"start_down\" )"},{"path":"https://swebb1.github.io/ggulti/reference/throw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function to create a pitch_arrow dataframe representing a throw between two players in an object list. — throw","text":"object_list List pitch_objects (required) label Name arrow (required) show Show label plots : default = F Label throwing object Label receiving object \"space\" empty space (provide space_x space_y) frame Vector frames show arrow : default = 1 throw_frame frame representing throw receive positions objects alpha Colour opacity arrow : default = 1 arrow_shape Shape arrow : \"straight\" (default), \"bhrc\", \"fhrc\", \"bhio\", \"fhio\" (give curved throwing shapes) space_x x-coord throw space (must specify = \"space\") space_y y-coord throw space (must specify = \"space\") label_pos Position label relative start end arrow : \"start_down\" (default), \"start_up\", \"end_down\", \"end_up\"","code":""},{"path":"https://swebb1.github.io/ggulti/reference/throw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function to create a pitch_arrow dataframe representing a throw between two players in an object list. — throw","text":"data.frame","code":""},{"path":"https://swebb1.github.io/ggulti/reference/throw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience function to create a pitch_arrow dataframe representing a throw between two players in an object list. — throw","text":"","code":"throw(player_list,\"T1\", from = \"H1\", to = \"C1\", frame = 1:3, throw_frame = 3) #> Error in throw(player_list, \"T1\", from = \"H1\", to = \"C1\", frame = 1:3,     throw_frame = 3): object 'player_list' not found throw(player_list,\"T1\", from = \"H1\", to = \"space\", space_x = 5, space_y = 90, arrow_shape = \"bhrc\", frame = 2:3, throw_frame = 3) #> Error in throw(player_list, \"T1\", from = \"H1\", to = \"space\", space_x = 5,     space_y = 90, arrow_shape = \"bhrc\", frame = 2:3, throw_frame = 3): object 'player_list' not found"}]
